
#########################################
# Cache Broadcast Method
# values:
# jgroups -> use jgroups's multicast
# redis -> use redis publish/subscribe mechanism
#########################################

cache.broadcast=redis

#########################################
# Level 1&2 provider 
# values:
# none -> disable this level cache
# ehcache -> use ehcache as level 1 cache
# redis -> use redis(hashs) as level 2 cache
# [classname] -> use custom provider 
#########################################

cache.L1.provider_class=ehcache
cache.L2.provider_class=redis

#########################################
# Cache Serialization Provider
# values:
# fst -> fast-serialization
# java -> java standard
# [classname implements Serializer]
#########################################

cache.serialization = fst

#########################################
# Redis connection configuration
#########################################

## connection
redis.host = localhost
#redis.host = localhost
redis.port = 6379
redis.timeout = 2000
redis.password = 
redis.database = 0

## redis cache namespace optional, default[j2cache]
redis.namespace = basis
redis.default.expire_time=86400
## redis channel name, \u540C\u4E00\u4E2Aredis server\u5982\u679C\u6709\u591A\u4E2A\u4F7F\u7528J2Cache, \u8BF7\u4FDD\u6301channel name \u7684\u552F\u4E00\u6027
redis.channel_name = basis_channel

## properties
redis.maxTotal = 50
#最大空闲链接
redis.maxIdle = 20
#获取连接时的最大等待毫秒数
redis.maxWaitMillis = 100
#逐出连接的最小空闲时间 默认1800000毫秒(30分钟)
redis.minEvictableIdleTimeMillis = 1800000
#最小空闲连接数, 默认0
redis.minIdle = 5
#每次逐出检查时 逐出的最大数目 如果为负数就是 : 1/abs(n), 默认3
redis.numTestsPerEvictionRun = 10
#是否启用后进先出, 默认true
redis.lifo = false
#对象空闲多久后逐出, 当空闲时间>该值 且 空闲连接>最大空闲数 时直接逐出,不再根据MinEvictableIdleTimeMillis判断  (默认逐出策略)   
redis.softMinEvictableIdleTimeMillis = 10
#在获取连接的时候检查有效性, 默认false
redis.testOnBorrow = true
redis.testOnReturn = false
#在空闲时检查有效性, 默认false
redis.testWhileIdle = false
#逐出扫描的时间间隔(毫秒) 如果为负数,则不运行逐出线程, 默认-1
redis.timeBetweenEvictionRunsMillis = 300000
#连接耗尽时是否阻塞, false报异常,ture阻塞直到超时, 默认true
redis.blockWhenExhausted = true

#########################################
# Ehcache configuration
#########################################

#ehcache.name=
#ehcache.configXml=ehcache.xml